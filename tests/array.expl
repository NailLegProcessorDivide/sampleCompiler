// Basic testing of arrays

let r1 : int = test1(0)
let r2 : int = test2(0)
let g : int = 2

let a : array 2 = array[4][4]
let f : int = fill(0)
let b : array 1 = test3(a)
let c : int = test4(0)

function fill(x : int) : int {
  let i : int = 0
  let j : int = 0
  while i < 4 {
    j := 0
    while j < 4 {
      a[i][j] := i+j
      j := j + 1
    }
    i := i + 1
  }
  return x
}

function test1 (x : int) : int
{
  let i : int = 0
  let x : array 1 = array[10]
  let j : int = 0
  output i // should print 0
  while i < 10 {
    x[i] := i
    i := i + 1
  }
  output i // should print 10
  j := x[0]
  output j // should print 0
  j := x[9]
  output j // should print 9
  return j
}

function test2 (x : int) : int
{
  let x : array 3 = array[3][5][7]
  let count : int = 0
  let i : int = 0
  let j : int = 0
  let k : int = 0
  let o : int = 0
  while i < 3 {
    j := 0
    while j < 5 {
      k := 0
      while k < 7 {
        x[i][j][k] := count
        count := count + 1
        k := k + 1
      }
      j := j + 1
    }
    i := i + 1
  }
  o := x[0][0][0]
  output o // should print 0
  o := x[1][3][4]
  output o // should print 60
  o := x[2][4][6]
  output o //should print 104
  return o
}

function test3 (a : array 2) : array 1 {
  let b : array 1 = array[4]
  let i : int = 0
  let j : int = 0
  while i < 4 {
    j := 0
    while j < 4 {
      b[i] := b[i] + a[i][j]
      j := j + 1
    }
    i := i + 1
  }
  return b
}

function test4 (x : int) : int {
  let i : int = 0
  while i < 4 {
    x := b[i]
    output x // 6, 10, 14, 18
    i := i + 1
  }
  x := b[g] // 14
  output x
  return x
}
